
import Project.ConnectionProvider;
import java.awt.HeadlessException;
import java.sql.*;
import javax.swing.JOptionPane;
import net.proteanit.sql.DbUtils;


/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author dnedk
 */
public class newClient extends javax.swing.JFrame {

    /**
     * Creates new form newStudent
     */
    public newClient() {
        initComponents();
        try {
            Connection con = ConnectionProvider.getCon();
            Statement st = con.createStatement();
            ResultSet rs = st.executeQuery("select * from client");
            ClientsTable.setModel(DbUtils.resultSetToTableModel(rs));
            ClientsTable.getColumnModel().getColumn(0).setMinWidth(0);
            ClientsTable.getColumnModel().getColumn(0).setMaxWidth(0);
            ClientsTable.getColumnModel().getColumn(0).setWidth(0);
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "Connection Error");
        }
        DelBtn.setEnabled(false);
        EditBtn.setEnabled(false);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel5 = new javax.swing.JLabel();
        PersonalNumberLabel = new javax.swing.JLabel();
        FirstNameLabel = new javax.swing.JLabel();
        LastNameLabel = new javax.swing.JLabel();
        PhoneNumberLabel = new javax.swing.JLabel();
        PersonalNumberTF = new javax.swing.JTextField();
        FirstNameTF = new javax.swing.JTextField();
        LastNameTF = new javax.swing.JTextField();
        PhoneNumberTF = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        ClientsTable = new javax.swing.JTable();
        RegBtn = new javax.swing.JButton();
        EditBtn = new javax.swing.JButton();
        SrchBtm = new javax.swing.JButton();
        BckBtn = new javax.swing.JButton();
        DelBtn = new javax.swing.JButton();
        CloseBtn = new javax.swing.JButton();
        BackgroundLbl = new javax.swing.JLabel();

        jLabel5.setIcon(new javax.swing.ImageIcon("C:\\Users\\dnedk\\Downloads\\8e543faa453027d02c99083b55012c09.jpg")); // NOI18N
        jLabel5.setText("jLabel5");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setLocation(new java.awt.Point(325, 80));
        setMinimumSize(new java.awt.Dimension(769, 672));
        setUndecorated(true);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        PersonalNumberLabel.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        PersonalNumberLabel.setForeground(new java.awt.Color(255, 255, 255));
        PersonalNumberLabel.setText("Personal Number:");
        getContentPane().add(PersonalNumberLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 46, 146, 31));

        FirstNameLabel.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        FirstNameLabel.setForeground(new java.awt.Color(255, 255, 255));
        FirstNameLabel.setText("First Name:");
        getContentPane().add(FirstNameLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 88, 146, 40));

        LastNameLabel.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        LastNameLabel.setForeground(new java.awt.Color(255, 255, 255));
        LastNameLabel.setText("Last Name:");
        getContentPane().add(LastNameLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 134, 146, 35));

        PhoneNumberLabel.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        PhoneNumberLabel.setForeground(new java.awt.Color(255, 255, 255));
        PhoneNumberLabel.setText("Phone Number:");
        getContentPane().add(PhoneNumberLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 175, 146, 34));
        getContentPane().add(PersonalNumberTF, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 46, 262, 36));
        getContentPane().add(FirstNameTF, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 88, 262, 40));
        getContentPane().add(LastNameTF, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 134, 262, 35));
        getContentPane().add(PhoneNumberTF, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 175, 262, 39));

        ClientsTable.setBorder(new javax.swing.border.MatteBorder(null));
        ClientsTable.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        ClientsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "ID", "Personal Number", "First Name", "Last Name", "Phone Number"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        ClientsTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                SelectUser(evt);
            }
        });
        jScrollPane1.setViewportView(ClientsTable);
        if (ClientsTable.getColumnModel().getColumnCount() > 0) {
            ClientsTable.getColumnModel().getColumn(1).setResizable(false);
            ClientsTable.getColumnModel().getColumn(4).setResizable(false);
        }

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 240, 810, 270));

        RegBtn.setText("REGISTER NEW USER");
        RegBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RegisterNewUser(evt);
            }
        });
        getContentPane().add(RegBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 20, 210, 40));

        EditBtn.setText("EDIT SELECTED USER");
        EditBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EditUserInfo(evt);
            }
        });
        getContentPane().add(EditBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 60, 210, 40));

        SrchBtm.setText("SEARCH USER");
        SrchBtm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SearchUser(evt);
            }
        });
        getContentPane().add(SrchBtm, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 100, 210, 40));

        BckBtn.setText("BACK");
        BckBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BckBtnActionPerformed(evt);
            }
        });
        getContentPane().add(BckBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 140, 210, 40));

        DelBtn.setText("DELETE SELECTED USER");
        DelBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeleteUser(evt);
            }
        });
        getContentPane().add(DelBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 180, 210, 40));

        CloseBtn.setText("CLOSE");
        CloseBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CloseBtnActionPerformed(evt);
            }
        });
        getContentPane().add(CloseBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 580, 170, 50));

        BackgroundLbl.setIcon(new javax.swing.ImageIcon("C:\\Users\\dnedk\\Downloads\\old-books.jpg")); // NOI18N
        BackgroundLbl.setText("jLabel6");
        getContentPane().add(BackgroundLbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, -10, 820, 700));

        pack();
    }// </editor-fold>//GEN-END:initComponents
private void cleanFields() {
        PersonalNumberTF.setText("");
        FirstNameTF.setText("");
        LastNameTF.setText("");
        PhoneNumberTF.setText("");
    }

private void updateTable() {
        try {
            Connection con = ConnectionProvider.getCon();
            Statement st = con.createStatement();
            ResultSet rs = st.executeQuery("select * from client");
            ClientsTable.setModel(DbUtils.resultSetToTableModel(rs));
            ClientsTable.getColumnModel().getColumn(0).setMinWidth(0);
            ClientsTable.getColumnModel().getColumn(0).setMaxWidth(0);
            ClientsTable.getColumnModel().getColumn(0).setWidth(0);
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "Connection Error");
        }
    }
    private void RegisterNewUser(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RegisterNewUser
        // TODO add your handling code here:
        String personalNumber = PersonalNumberTF.getText();
        String name = FirstNameTF.getText();
        String lastName = LastNameTF.getText();
        String phoneNumber = PhoneNumberTF.getText();

        if (!personalNumber.isEmpty() && !name.isEmpty() && !lastName.isEmpty()) {
            try {
                Connection con = ConnectionProvider.getCon();
                Statement st = con.createStatement();
                st.executeUpdate("insert into client(personalNumber,name,lastName,telNumber) values('" + personalNumber + "','" + name + "','" + lastName + "','" + phoneNumber + "')");
                JOptionPane.showMessageDialog(null, "Successfully updated");
                cleanFields();
                updateTable();
            } catch (HeadlessException | SQLException e) {
                JOptionPane.showMessageDialog(null, "Please enter valid data!");
                cleanFields();
                updateTable();
            }
        } else {
            JOptionPane.showMessageDialog(null, "Please enter valid data!");
            cleanFields();
            updateTable();
        }

    }//GEN-LAST:event_RegisterNewUser
    int idnum;
    private void SelectUser(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_SelectUser
        // TODO add your handling code here:
        RegBtn.setEnabled(false);
        DelBtn.setEnabled(true);
        EditBtn.setEnabled(true);

        int row = ClientsTable.getSelectedRow();
        Object idObject = ClientsTable.getValueAt(row, 0);
        String ids = idObject.toString();
        idnum = Integer.parseInt(ids);

        if (evt.getClickCount() >= 1) {
            PersonalNumberTF.setText(ClientsTable.getValueAt(row, 1).toString());
            FirstNameTF.setText(ClientsTable.getValueAt(row, 2).toString());
            LastNameTF.setText(ClientsTable.getValueAt(row, 3).toString());
            PhoneNumberTF.setText(ClientsTable.getValueAt(row, 4).toString());
        }

    }//GEN-LAST:event_SelectUser

    private void SearchUser(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SearchUser
        // TODO add your handling code here:

        String personalNumber = PersonalNumberTF.getText();
        String name = FirstNameTF.getText();
        String lastName = LastNameTF.getText();

        try {
            Connection con = ConnectionProvider.getCon();
            Statement st = con.createStatement();
            if (name.isEmpty() && lastName.isEmpty() && personalNumber.isEmpty()) {
                ResultSet rs = st.executeQuery("select * from client");
                ClientsTable.setModel(DbUtils.resultSetToTableModel(rs));
                ClientsTable.getColumnModel().getColumn(0).setMinWidth(0);
                ClientsTable.getColumnModel().getColumn(0).setMaxWidth(0);
                ClientsTable.getColumnModel().getColumn(0).setWidth(0);
            } else {
                ResultSet rs = st.executeQuery("select * from client where personalNumber = '" + personalNumber + "' or name = '" + name + "' or lastName = '" + lastName + "'");
                ClientsTable.setModel(DbUtils.resultSetToTableModel(rs));
                ClientsTable.getColumnModel().getColumn(0).setMinWidth(0);
                ClientsTable.getColumnModel().getColumn(0).setMaxWidth(0);
                ClientsTable.getColumnModel().getColumn(0).setWidth(0);
            }

        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "Connection Error");
        }

    }//GEN-LAST:event_SearchUser

    private void DeleteUser(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleteUser
        // TODO add your handling code here:

        try {
            Connection con = ConnectionProvider.getCon();
            PreparedStatement st = con.prepareStatement("DELETE FROM CLIENT WHERE id = '" + idnum + "'");
            st.executeUpdate();
            JOptionPane.showMessageDialog(null, "Successfully Deleted!");
            cleanFields();
            updateTable();
            ClientsTable.clearSelection();
            DelBtn.setEnabled(false);
            EditBtn.setEnabled(false);
            RegBtn.setEnabled(true);
            idnum = 0;
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "Client doesn't exist");
            cleanFields();
            updateTable();
            ClientsTable.clearSelection();
            DelBtn.setEnabled(false);
            EditBtn.setEnabled(false);
            RegBtn.setEnabled(true);
            idnum = 0;
        }

    }//GEN-LAST:event_DeleteUser

    private void BckBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BckBtnActionPerformed
        // TODO add your handling code here:
        RegBtn.setEnabled(true);
        ClientsTable.clearSelection();
        DelBtn.setEnabled(false);
        EditBtn.setEnabled(false);
        cleanFields();
        idnum = 0;
         try {
            Connection con = ConnectionProvider.getCon();
            Statement st = con.createStatement();
            ResultSet rs = st.executeQuery("select * from client");
                ClientsTable.setModel(DbUtils.resultSetToTableModel(rs));
                ClientsTable.getColumnModel().getColumn(0).setMinWidth(0);
                ClientsTable.getColumnModel().getColumn(0).setMaxWidth(0);
                ClientsTable.getColumnModel().getColumn(0).setWidth(0);
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "Connection Error");
        }
    }//GEN-LAST:event_BckBtnActionPerformed

    private void CloseBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CloseBtnActionPerformed
        // TODO add your handling code here:
        setVisible(false);
    }//GEN-LAST:event_CloseBtnActionPerformed

    private void EditUserInfo(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EditUserInfo
        // TODO add your handling code here:
        String personalNumber = PersonalNumberTF.getText();
        String name = FirstNameTF.getText();
        String lastName = LastNameTF.getText();
        String phoneNumber = PhoneNumberTF.getText();
        if (!personalNumber.isEmpty() && !name.isEmpty() && !lastName.isEmpty()) {
            try {
                Connection con = ConnectionProvider.getCon();
                PreparedStatement st = con.prepareStatement("UPDATE CLIENT SET personalNumber = '" + personalNumber + "', name = '" + name + "',"
                        + " lastName = '" + lastName + "', telNumber = '" + phoneNumber + "' WHERE id = '" + idnum + "'");
                st.executeUpdate();
                JOptionPane.showMessageDialog(null, "Successfully Updated!");

                cleanFields();
                updateTable();
                ClientsTable.clearSelection();
                DelBtn.setEnabled(false);
                EditBtn.setEnabled(false);
                RegBtn.setEnabled(true);
                idnum = 0;
            } catch (SQLException e) {
                JOptionPane.showMessageDialog(null, "Please enter valid data!");
                cleanFields();
                updateTable();
                ClientsTable.clearSelection();
                DelBtn.setEnabled(false);
                EditBtn.setEnabled(false);
                RegBtn.setEnabled(true);
                idnum = 0;
            }
        } else {
            JOptionPane.showMessageDialog(null, "Please enter valid data!");
            cleanFields();
            updateTable();
        }
    }//GEN-LAST:event_EditUserInfo

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(newClient.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new newClient().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel BackgroundLbl;
    private javax.swing.JButton BckBtn;
    private javax.swing.JTable ClientsTable;
    private javax.swing.JButton CloseBtn;
    private javax.swing.JButton DelBtn;
    private javax.swing.JButton EditBtn;
    private javax.swing.JLabel FirstNameLabel;
    private javax.swing.JTextField FirstNameTF;
    private javax.swing.JLabel LastNameLabel;
    private javax.swing.JTextField LastNameTF;
    private javax.swing.JLabel PersonalNumberLabel;
    private javax.swing.JTextField PersonalNumberTF;
    private javax.swing.JLabel PhoneNumberLabel;
    private javax.swing.JTextField PhoneNumberTF;
    private javax.swing.JButton RegBtn;
    private javax.swing.JButton SrchBtm;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
